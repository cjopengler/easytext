{
    "training_dataset": {
      "__type__": "EventDataset",
      "__name_space__": "event_detection_without_tirgger",
      "dataset_file_path": "data/dataset/ace_english_event/sample.txt"
    },
  
    "validation_dataset": {
      "__type__": "EventDataset",
      "__name_space__": "event_detection_without_tirgger",
      "dataset_file_path": "data/dataset/ace_english_event/sample.txt"
    },
  
    "vocabulary_builder": {
      "__type__": "VocabularyBuilder",
      "__name_space__": "event_detection_without_tirgger",
      "dataset": {
        "__object__": "training_dataset"
      },
      "vocabulary_collate": {
        "__type__": "VocabularyCollate",
        "__name_space__": "event_detection_without_tirgger"
      },
      "token_vocabulary_dir": null,
      "label_vocabulary_dir": "data/event_detection/event_detection_without_trigger/serialize/vocabulary/label_vocabulary",
      "is_build_token_vocabulary": false,
      "pretrained_word_embedding_loader": null
    },
  
    "model_collate": {
      "__type__": "BertModelCollate",
      "__name_space__": "ner",
      "tokenizer": {
        "__type__": "BertTokenizer",
        "__name_space__": "event_detection_without_tirgger",
        "bert_dir": "data/pretrained/bert/bert-base-chinese-pytorch"
      },
      "sequence_label_vocab": {
        "__type__": "label_vocabulary",
        "__name_space__": "event_detection_without_tirgger",
        "vocabulary_builder": {
          "__object__": "vocabulary_builder"
        }
      },
      "add_special_token": false,
      "sequence_max_len": 512
    },
  
    "model_label_decoder": {
      "__type__": "NerMaxModelLabelDecoder",
      "__name_space__": "event_detection_without_tirgger",
      "label_vocabulary": {
        "__object__": "model_collate.sequence_label_vocab"
      }
    },
  
    "metric": {
      "__type__": "EventF1MetricAdapter",
      "__name_space__": "event_detection_without_tirgger",
      "vocabulary_builder": {
        "__object__": "vocabulary_builder"
      },
      "model_label_decoder": {
        "__object__": "model_label_decoder"
      }
    },
  
    "model": {
      "__type__": "EventModel",
      "__name_space__": "event_detection_without_tirgger",
      "bert_dir": "data/pretrained/bert/bert-base-chinese-pytorch",
      "vocabulary_builder": {
        "__object__": "vocabulary_builder"
      },
      "dropout": 0.1,
      "rnn_type": "lstm",
      "hidden_size": 300,
      "num_layer": 2,
      "rnn_dropout": 0.4,
      "is_used_crf": false
    },
  
    "optimizer": {
      "__type__": "EventOptimizerFactory",
      "__name_space__": "event_detection_without_tirgger",
      "fine_tuning": true
    },
  
    "loss": {
      "__type__": "EventLoss",
      "__name_space__": "event_detection_without_tirgger",
      "vocabulary_builder": {
        "__object__": "vocabulary_builder"
      }
    },
  
    "process_group_parameter": {
      "__type__": "ProcessGroupParameter",
      "__name_space__": "__easytext__",
      "host": "127.0.0.1",
      "port": "2345",
      "backend": "nccl"
    },
  
    "distributed_data_parallel_parameter": {
      "__type__": "DistributedDataParallelParameter",
      "__name_space__": "__easytext__",
      "find_unused_parameters": false
    },
  
    "num_epoch": 200,
    "patient": 100,
    "num_check_point_keep": 2,
  
    "devices": ["cuda:0", "cuda:1"],
    "serialize_dir": "data/event_detection/event_detection_without_trigger/serialize/train",
    "train_batch_size": 8,
    "test_batch_size": 16
  }
  

  